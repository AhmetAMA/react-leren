1
00:00:00,960 --> 00:00:07,350
Let's start this section by discovering what thinking in React is actually all about.

2
00:00:08,450 --> 00:00:15,800
So as you might have noticed by now, building React applications requires a completely new mindset

3
00:00:15,800 --> 00:00:21,260
because it's just very different from building applications with vanilla JavaScript.

4
00:00:21,500 --> 00:00:29,210
So to build React apps, you not only need to learn how to work with the React API in practice, like

5
00:00:29,210 --> 00:00:35,420
with all the different functions like use state, but you also need to be able to think in react.

6
00:00:35,420 --> 00:00:39,410
So you need to basically enter the React mindset.

7
00:00:39,440 --> 00:00:46,730
Now once you have both of these skills, you will have mastered react and you will be well on your way

8
00:00:46,730 --> 00:00:50,120
to building professional react applications.

9
00:00:50,420 --> 00:00:54,080
Now, what does thinking in React actually mean?

10
00:00:54,320 --> 00:01:00,860
Well, while you're building an application, thinking in React means that you have a very good mental

11
00:01:00,860 --> 00:01:10,830
model of how and when to use all the react tools like components, state props, general data flow effects,

12
00:01:10,830 --> 00:01:12,450
and many more.

13
00:01:12,690 --> 00:01:20,070
It's also about always thinking in terms of state transitions rather than in element mutations, as

14
00:01:20,070 --> 00:01:21,450
we have learned before.

15
00:01:21,890 --> 00:01:29,360
Now, you can also view thinking in React as a whole process, which can help us build apps in a more

16
00:01:29,360 --> 00:01:30,620
structured way.

17
00:01:30,830 --> 00:01:38,660
And the first step in this process is to break the desired UI into components and establish how these

18
00:01:38,660 --> 00:01:41,380
components are related to one another.

19
00:01:41,390 --> 00:01:43,940
So to establish the component tree.

20
00:01:44,210 --> 00:01:50,360
This also includes thinking about reusability and composability of components.

21
00:01:51,010 --> 00:01:56,080
After that, we can start by building a static version of the application.

22
00:01:56,080 --> 00:01:59,560
So without any state and interactivity.

23
00:01:59,740 --> 00:02:06,730
And this is great because by doing this we do most of the coding up front before having to worry about

24
00:02:06,730 --> 00:02:08,740
state and interactivity.

25
00:02:08,770 --> 00:02:10,750
That part comes next.

26
00:02:10,750 --> 00:02:15,040
So in step three, where we think about state.

27
00:02:15,220 --> 00:02:22,960
So here we decide when we need state, what types of state we need and where to place each piece of

28
00:02:22,960 --> 00:02:23,680
state.

29
00:02:23,830 --> 00:02:29,680
Then finally, we think about establishing how data flows through the application.

30
00:02:29,860 --> 00:02:37,240
This includes thinking about one way data flow, child to parent communication and the way global state

31
00:02:37,240 --> 00:02:38,650
should be accessed.

32
00:02:38,740 --> 00:02:45,670
So these points three and four is what we collectively call state management, which is the main focus

33
00:02:45,670 --> 00:02:47,140
of this section.

34
00:02:47,350 --> 00:02:54,440
Now, of course, this is not a rigid process that we always need to follow to the letter In practice.

35
00:02:54,440 --> 00:03:01,070
There's always a lot of back and forth between these different steps, and things are never this linear.

36
00:03:01,070 --> 00:03:05,930
But it's still good to have a process like this as an overall guideline.

37
00:03:06,620 --> 00:03:14,090
Okay, Now once you really know how to think in React, you'll be able to answer questions like how

38
00:03:14,090 --> 00:03:22,520
to break up my UI, design into components, how to make some of my components truly reusable, or how

39
00:03:22,520 --> 00:03:26,330
to assemble a user interface from reusable components.

40
00:03:26,810 --> 00:03:33,830
Now, we also think a lot about state, like what pieces of state do I need for the interactivity that

41
00:03:33,830 --> 00:03:38,570
I want and where to then place each of these states?

42
00:03:38,600 --> 00:03:47,480
Or in other words, what component should actually own each piece of state or what types of state can

43
00:03:47,480 --> 00:03:49,050
or should I use?

44
00:03:49,070 --> 00:03:55,130
And in more general terms, how to make my data flow through the application.

45
00:03:55,850 --> 00:04:02,330
Now, as you might have noticed, we already started to talk about some of these topics before, but

46
00:04:02,330 --> 00:04:08,930
I still wanted to have one section where I really focus on some of these skills so that you can start

47
00:04:08,930 --> 00:04:12,350
getting more and more into the React mindset.

48
00:04:12,560 --> 00:04:19,880
Now, of course, you will only really master these skills through practice and writing code, and lucky

49
00:04:19,880 --> 00:04:27,440
for you, we will do lots of that in this course, but we will also take a bit of a theoretical approach

50
00:04:27,440 --> 00:04:34,130
from time to time, just like in this video, because I believe that it's really, really important

51
00:04:34,130 --> 00:04:39,460
that I teach you these things besides just the React API itself.

52
00:04:39,470 --> 00:04:46,880
And by doing so, I'll make this course really as good as possible for you and in my opinion, way better

53
00:04:46,880 --> 00:04:49,340
than all the other React courses out there.

54
00:04:49,830 --> 00:04:55,620
But anyway, let's now move on to looking at the fundamentals of state management.
