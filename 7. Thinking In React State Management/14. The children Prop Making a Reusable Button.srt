1
00:00:00,850 --> 00:00:02,050
So moving on.

2
00:00:02,050 --> 00:00:09,550
Now it's time to learn about yet another fundamental concept that we use all the time in React development,

3
00:00:09,550 --> 00:00:12,100
and that is the children prop.

4
00:00:13,420 --> 00:00:20,620
So we have finished this project right here and so we can basically finish this with Control C.

5
00:00:21,280 --> 00:00:26,120
And so now if we reload, you immediately see that the connection has been lost.

6
00:00:26,140 --> 00:00:31,120
Or you could also simply have closed this vs code window right here.

7
00:00:32,940 --> 00:00:33,690
Okay.

8
00:00:33,990 --> 00:00:40,890
And now what I want to do in this lecture and the next one, as I introduce you to the children prop,

9
00:00:40,890 --> 00:00:44,910
is to use the steps component that we built before.

10
00:00:45,970 --> 00:00:50,770
So let's go back to the steps folder and open it up in vs code.

11
00:00:52,150 --> 00:00:55,690
And again, you can do that in any way that you wish.

12
00:00:56,780 --> 00:00:59,870
Now, I will now actually duplicate this file.

13
00:01:00,050 --> 00:01:08,420
So this app.js in which we are working, I will copy and then paste so that we can keep the first version

14
00:01:08,420 --> 00:01:10,340
of the code that we wrote.

15
00:01:10,610 --> 00:01:13,490
So calling this one app version one.

16
00:01:13,640 --> 00:01:17,660
And so now we can continue the work here in this file.

17
00:01:19,880 --> 00:01:25,880
All right, So let's here come to the terminal and then write NPM.

18
00:01:26,880 --> 00:01:31,590
Start so that our project opens up again here in the browser.

19
00:01:33,450 --> 00:01:34,500
All right.

20
00:01:36,070 --> 00:01:40,300
Now remember how we had actually included these steps component here twice.

21
00:01:40,300 --> 00:01:43,990
So let's remove or comment out one of them.

22
00:01:45,070 --> 00:01:47,050
And so, yeah, it's gone.

23
00:01:47,290 --> 00:01:53,410
And as always, it's important to keep the console open and maybe also the component tree.

24
00:01:53,410 --> 00:01:56,170
But for now, let's stay on the console.

25
00:01:56,740 --> 00:02:04,210
Okay, So the idea of this lecture is to create a reusable button that we can use instead of these two

26
00:02:04,210 --> 00:02:04,960
ones here.

27
00:02:04,960 --> 00:02:09,160
And I want to add an emoji to these buttons here as well.

28
00:02:10,410 --> 00:02:13,500
So let's take a look at where they are.

29
00:02:15,030 --> 00:02:15,420
Yeah.

30
00:02:15,420 --> 00:02:22,710
So these two buttons here again, I now want to create a reusable button that we use instead of these

31
00:02:22,710 --> 00:02:23,220
two.

32
00:02:23,970 --> 00:02:24,030
Well.

33
00:02:24,180 --> 00:02:25,500
So let's do that.

34
00:02:25,500 --> 00:02:28,710
And we start by using the knowledge that we already have.

35
00:02:29,840 --> 00:02:31,520
So let's say function.

36
00:02:32,280 --> 00:02:33,090
Button.

37
00:02:35,180 --> 00:02:37,670
And then all this will do is to return.

38
00:02:38,960 --> 00:02:45,830
A button element which would also have this style here and an onClick event handler.

39
00:02:46,430 --> 00:02:48,590
So let's just copy these two.

40
00:02:49,170 --> 00:02:49,860
Here.

41
00:02:50,860 --> 00:02:55,150
And also, let's place some text here for now.

42
00:02:55,810 --> 00:02:59,710
And so now the idea is that we can pass in the background color.

43
00:02:59,740 --> 00:03:04,930
The color this onClick handler here and the text as props.

44
00:03:06,230 --> 00:03:10,970
So basically, we want to accept some props here for the text color.

45
00:03:11,270 --> 00:03:13,460
So let's actually call that text color.

46
00:03:13,880 --> 00:03:15,350
So text color.

47
00:03:15,770 --> 00:03:17,900
Background color.

48
00:03:18,890 --> 00:03:20,480
The onClick handler.

49
00:03:21,260 --> 00:03:23,180
And also the text.

50
00:03:23,720 --> 00:03:25,070
And so then here.

51
00:03:27,250 --> 00:03:28,870
Let's use that button, actually.

52
00:03:28,870 --> 00:03:33,190
So before we keep working on the button, let's include it here immediately.

53
00:03:34,750 --> 00:03:36,850
Let's right away delete this one.

54
00:03:40,350 --> 00:03:43,800
And so we use our component that we are building right now.

55
00:03:44,880 --> 00:03:47,340
So let's say text color.

56
00:03:48,760 --> 00:03:50,920
Should be this one here.

57
00:03:54,630 --> 00:03:56,340
Or actually, that's the background color.

58
00:03:56,370 --> 00:03:57,240
Of course.

59
00:03:57,790 --> 00:03:59,530
So bgcolor.

60
00:04:01,310 --> 00:04:03,440
Then the text color.

61
00:04:04,980 --> 00:04:11,520
This one should be f, f, f for white and then also the onClick prop.

62
00:04:12,240 --> 00:04:17,670
And here we want to specify the handle previous function.

63
00:04:19,490 --> 00:04:22,880
All right, then we close and also the text.

64
00:04:23,090 --> 00:04:26,780
So here this one said previous.

65
00:04:28,450 --> 00:04:35,260
And so now let's come to our button down here and let's use these values here instead of the hard coded

66
00:04:35,260 --> 00:04:36,070
values.

67
00:04:36,280 --> 00:04:41,560
So here, background color should be the BG prop that we received.

68
00:04:42,790 --> 00:04:47,200
And this one should be the text color that we receive as a prop.

69
00:04:47,830 --> 00:04:50,800
Then here we want on click.

70
00:04:51,570 --> 00:04:55,860
And here instead of just this generic text we want.

71
00:04:56,530 --> 00:04:58,990
Again, the text that we receive as a prop.

72
00:04:59,650 --> 00:05:01,120
So let's give it a save.

73
00:05:01,540 --> 00:05:03,160
Maybe reload even.

74
00:05:03,790 --> 00:05:10,990
And you'll see as we use this button, it still works and looks exactly the same as before.

75
00:05:12,320 --> 00:05:15,860
So let's then do the same thing with this one here.

76
00:05:17,570 --> 00:05:20,330
So that's just copy and pasting.

77
00:05:21,200 --> 00:05:26,660
This one and then changing the onClick handler to handle next.

78
00:05:26,660 --> 00:05:27,680
And here.

79
00:05:28,340 --> 00:05:29,300
Next.

80
00:05:30,480 --> 00:05:31,800
Just delete this button.

81
00:05:31,800 --> 00:05:38,460
And so now with this, we have exactly the same functionality as we had before, but we extracted these

82
00:05:38,460 --> 00:05:44,520
buttons that we had here into a reusable button component which right now accepts the text color, the

83
00:05:44,520 --> 00:05:47,880
background, the onClick handler and the text.

84
00:05:48,000 --> 00:05:53,970
So passing all these data here as props into this component should be pretty clear at this point.

85
00:05:53,970 --> 00:05:59,100
So hopefully you understood exactly how that works in previous lectures.

86
00:05:59,400 --> 00:06:03,720
But anyway, let's now say that we also want to add an emoji.

87
00:06:04,560 --> 00:06:06,150
So that's easy enough.

88
00:06:06,150 --> 00:06:08,370
We just accept it here as a prop.

89
00:06:09,560 --> 00:06:10,820
So emoji.

90
00:06:11,060 --> 00:06:18,950
And then let's add that here before the text and let's actually create a span element for this emoji.

91
00:06:19,920 --> 00:06:22,530
So we create a span and then in there.

92
00:06:23,360 --> 00:06:26,120
We put our emoji and then the text.

93
00:06:28,480 --> 00:06:29,110
Okay.

94
00:06:29,110 --> 00:06:32,650
And then let's actually pass that emoji in.

95
00:06:35,840 --> 00:06:40,730
And then let's hear maybe search for finger because I want this one here.

96
00:06:41,380 --> 00:06:42,670
For previous.

97
00:06:43,660 --> 00:06:44,470
And then.

98
00:06:45,200 --> 00:06:48,260
One finger pointing in the opposite direction.

99
00:06:49,510 --> 00:06:50,650
For next.

100
00:06:51,650 --> 00:06:53,420
So that's this one.

101
00:06:54,940 --> 00:06:56,800
Okay, give it a save.

102
00:06:56,800 --> 00:06:58,540
And yeah, that worked.

103
00:06:58,570 --> 00:06:59,340
Nice.

104
00:06:59,350 --> 00:07:05,770
So we have our emojis and our text and it works exactly as we specified our button down here.

105
00:07:06,070 --> 00:07:13,210
But now let's say that I wanted this emoji here to be on this left side, but the other emoji on the

106
00:07:13,210 --> 00:07:18,400
right side so that it would say next and then pointing right to the right side.

107
00:07:18,400 --> 00:07:23,530
So with this, we kind of have a problem because we already have so many props.

108
00:07:23,650 --> 00:07:29,620
And so do you think that we should add yet another prop basically for this direction?

109
00:07:29,980 --> 00:07:31,690
Well, maybe not.

110
00:07:31,720 --> 00:07:35,830
Maybe it's getting a little bit too crazy here with all these props.

111
00:07:35,830 --> 00:07:40,510
And we could keep adding more and more to customize this button even more.

112
00:07:40,510 --> 00:07:46,420
But I think at this point, we should not add, for example, this one here.

113
00:07:47,360 --> 00:07:55,010
Like for the direction or for the side of the emoji and instead make use of the children prop that I

114
00:07:55,010 --> 00:07:57,170
mentioned at the beginning of the video.

115
00:07:57,290 --> 00:08:05,000
So instead of passing in this side here, this emoji and the text, which are basically the content

116
00:08:05,270 --> 00:08:12,170
here of this button element, what if we could simply pass the content right into the button as well?

117
00:08:12,200 --> 00:08:18,830
Or in other words, what if we could pass simply some JSX into the component and then the component

118
00:08:18,830 --> 00:08:22,550
could use that JSX and simply display it?

119
00:08:22,670 --> 00:08:25,970
Well, we can actually do that in React.

120
00:08:27,170 --> 00:08:34,790
So let's come up here and notice how up until this point, all our components have always been self-closing.

121
00:08:34,910 --> 00:08:39,650
So we never had like this and then any content.

122
00:08:40,250 --> 00:08:42,340
And enclosed the element.

123
00:08:42,350 --> 00:08:47,580
So we never had this before, but in fact, we can do exactly this.

124
00:08:47,600 --> 00:08:54,290
So just like we do with HTML elements where we have an opening tag, then some content, and then a

125
00:08:54,290 --> 00:08:58,820
closing tag, we can do exactly the same with React components.

126
00:09:00,240 --> 00:09:01,050
So here.

127
00:09:01,080 --> 00:09:01,470
Of course.

128
00:09:01,470 --> 00:09:03,090
I don't want that gibberish.

129
00:09:03,330 --> 00:09:05,220
Let's just put it back for now.

130
00:09:05,970 --> 00:09:10,200
But basically what we want is to now here, right?

131
00:09:10,230 --> 00:09:12,780
That span with the emoji.

132
00:09:13,540 --> 00:09:14,860
So this one.

133
00:09:16,750 --> 00:09:18,100
And then previous.

134
00:09:18,670 --> 00:09:22,690
So this is exactly what we want as the content of this button.

135
00:09:22,690 --> 00:09:28,360
And if we were writing the button as a simple HTML button, this is what we would write.

136
00:09:28,690 --> 00:09:34,180
So that's actually exactly what we did right down here inside this button.

137
00:09:34,180 --> 00:09:38,980
And so again, we can do exactly the same thing with our React components.

138
00:09:39,950 --> 00:09:42,380
So then we no longer need this.

139
00:09:42,530 --> 00:09:43,700
And this.

140
00:09:44,760 --> 00:09:47,400
And let's then do the same thing here.

141
00:09:48,140 --> 00:09:56,120
And so now comes that part where we can very easily change the direction or the side of the emoji because

142
00:09:56,120 --> 00:09:57,800
we can simply write next.

143
00:09:58,190 --> 00:10:02,570
And then we put our emoji in the JS on the right side.

144
00:10:04,420 --> 00:10:06,520
So easy, right?

145
00:10:10,030 --> 00:10:13,240
Well, I forgot to close our button here.

146
00:10:16,260 --> 00:10:16,950
Okay.

147
00:10:16,950 --> 00:10:23,460
And now, of course, you don't see any content here anymore because we no longer are passing in the

148
00:10:23,460 --> 00:10:24,820
text and the emoji.

149
00:10:24,840 --> 00:10:26,860
And so now it's time to fix this.

150
00:10:26,880 --> 00:10:34,140
So basically, now it is time to give the button element access to whatever content we wrote into the

151
00:10:34,140 --> 00:10:36,470
opening tag and the closing tag.

152
00:10:36,480 --> 00:10:40,530
And so that's where finally the children prop comes into play.

153
00:10:40,800 --> 00:10:48,030
So the children prop is a prop that each React component automatically receives and the value of the

154
00:10:48,030 --> 00:10:54,510
children prop is exactly what is between the opening and the closing tag of the component.

155
00:10:56,100 --> 00:10:58,230
So let's remove all of this.

156
00:10:58,560 --> 00:11:01,440
And then we simply need to write children.

157
00:11:02,700 --> 00:11:06,630
And so this really is a predefined keyword inside React.

158
00:11:06,990 --> 00:11:15,060
And so as a final step, we can remove all of this and simply use the children here.

159
00:11:15,240 --> 00:11:16,460
Give it a save.

160
00:11:16,470 --> 00:11:18,430
And there we go.

161
00:11:18,450 --> 00:11:19,680
Beautiful.

162
00:11:19,890 --> 00:11:22,920
So we have exactly what we set out to build.

163
00:11:22,950 --> 00:11:26,850
We have the emoji here on the left side and here on the right side.

164
00:11:26,880 --> 00:11:30,030
And of course, we could do anything here.

165
00:11:30,330 --> 00:11:33,900
So we could have even more emojis, even more elements.

166
00:11:37,280 --> 00:11:39,470
And yeah, we could do really whatever we wanted.

167
00:11:40,900 --> 00:11:47,440
Because this content here of this element would simply be passed as the children prop into the button.

168
00:11:47,440 --> 00:11:54,370
And then here we use that children prop and display all that content right here inside this HTML button.

169
00:11:54,490 --> 00:12:01,720
And with this, we just gained a brand new and really, really important tool that is used all the time

170
00:12:01,720 --> 00:12:02,680
in React.

171
00:12:02,710 --> 00:12:06,820
It's actually one of its most useful features, I would say.

172
00:12:06,820 --> 00:12:12,220
And the reason for that is that it allows us to make our components truly reusable.

173
00:12:12,840 --> 00:12:20,150
So with this children prop, I am now able to pass whatever content I want into this button element

174
00:12:20,160 --> 00:12:25,470
and the button component doesn't even need to know what content this is going to be.

175
00:12:25,590 --> 00:12:28,200
All it does is to take the children.

176
00:12:28,200 --> 00:12:35,580
So all the content and all the JS that we just passed in and will simply then render it inside this

177
00:12:35,580 --> 00:12:36,630
button component.

178
00:12:36,630 --> 00:12:44,460
And so because of that, we can think of the children prop as a whole that can be filled by us passing

179
00:12:44,460 --> 00:12:46,980
in the content into that component.

180
00:12:46,980 --> 00:12:51,960
And if for some reason this seems strange, don't worry, we will use this.

181
00:12:51,960 --> 00:12:56,040
Children prop all the time, all the way until the end of the course.

182
00:12:56,190 --> 00:13:00,420
And now just to finish, let's quickly recap what we just did here.

183
00:13:01,700 --> 00:13:08,960
So by using the children prop in the button component, we basically left an empty hole right in the

184
00:13:08,960 --> 00:13:16,670
component that we could then fill with any JSX markup that the component receives as children.

185
00:13:16,670 --> 00:13:21,350
But then the question is how do we pass in these children?

186
00:13:21,590 --> 00:13:29,060
Well, when we include the button component in some JSX, instead of immediately closing the element,

187
00:13:29,090 --> 00:13:33,260
we can write some more JSX into that element.

188
00:13:33,290 --> 00:13:39,740
So just like we can write any HTML markup inside other HTML elements, right?

189
00:13:39,770 --> 00:13:47,060
So just like in HTML, we can write anything that we want between the opening and the closing tag of

190
00:13:47,060 --> 00:13:49,100
the component that we are using.

191
00:13:49,250 --> 00:13:57,050
So in this example, this piece of JSX creates the elements that are then the children of the button

192
00:13:57,050 --> 00:14:03,150
component and they will then be accessible inside that button as props dot children.

193
00:14:03,180 --> 00:14:06,240
So that's why we say it is the children prop.

194
00:14:06,920 --> 00:14:14,240
So basically by defining child elements like this, we are passing them into the button just like we

195
00:14:14,240 --> 00:14:16,220
can pass in any other prop.

196
00:14:16,250 --> 00:14:20,030
The difference is in the way in which we specify other props.

197
00:14:20,030 --> 00:14:23,310
So the more regular props and this one.

198
00:14:23,330 --> 00:14:30,020
So by passing in content between the opening and the closing tag of an element, we basically fill the

199
00:14:30,020 --> 00:14:37,790
hole that we left in the component by using props dot children in the JSX of that button, so of that

200
00:14:37,790 --> 00:14:39,080
button component.

201
00:14:39,230 --> 00:14:47,390
So if we think about this, the children prop is really an ideal way of making reusable and configurable

202
00:14:47,390 --> 00:14:52,680
components, especially when it comes to the content of the component.

203
00:14:52,700 --> 00:14:59,510
So, for example, let's say that we wanted to create a second similar button but with some other emojis

204
00:14:59,510 --> 00:15:00,650
and text.

205
00:15:00,950 --> 00:15:05,570
Well, now that we know about the children prop, that is really easy.

206
00:15:05,600 --> 00:15:12,920
All we have to do is to pass in some different JSX and then the button gets completely different content.

207
00:15:12,930 --> 00:15:20,670
And this technique is really, really useful for building generic components that do not know about

208
00:15:20,670 --> 00:15:23,490
their content before actually being used.

209
00:15:23,520 --> 00:15:30,690
Like for example, a modal window, a generic slider, or simply a generic button like the one that

210
00:15:30,690 --> 00:15:31,770
we just built.

211
00:15:32,280 --> 00:15:40,140
So again, this button component had absolutely no idea about the content that it was receiving and

212
00:15:40,140 --> 00:15:43,470
therefore about the content that it was displaying.

213
00:15:43,470 --> 00:15:48,660
And so this is really amazing to create generic and reusable components.

214
00:15:48,930 --> 00:15:55,650
So using the children prop like this is really an extremely powerful technique that you will need to

215
00:15:55,680 --> 00:15:57,500
master as you learn react.

216
00:15:57,510 --> 00:16:00,240
But we will use this over and over again.

217
00:16:00,240 --> 00:16:06,840
And so there will be plenty of time to practice and actually starting right in the next video.
