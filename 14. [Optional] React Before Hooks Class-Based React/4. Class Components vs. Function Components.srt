1
00:00:01,070 --> 00:00:07,850
Now, before we really dive into class components, it's a good idea to get familiar with all the main

2
00:00:07,850 --> 00:00:12,080
differences between function components and class components.

3
00:00:13,150 --> 00:00:20,470
So as we already know, function components are the current way of creating components in React as they

4
00:00:20,470 --> 00:00:27,070
were introduced into React in 2019 with React version 16.8.

5
00:00:27,310 --> 00:00:35,800
Class components, on the other hand, have been around for a long time, so since version 0.13 back

6
00:00:35,800 --> 00:00:37,060
in 2015.

7
00:00:37,620 --> 00:00:43,580
Now, technically, React has always had function components, but without hooks.

8
00:00:43,590 --> 00:00:52,020
So before 16.8 function components were very limited and not really useful because they couldn't even

9
00:00:52,020 --> 00:00:53,760
have their own state.

10
00:00:54,290 --> 00:01:01,520
Now, in order to create a function component, we just use any type of JavaScript function, no matter

11
00:01:01,520 --> 00:01:06,800
if a function declaration or an arrow function with class components.

12
00:01:06,830 --> 00:01:15,120
As the name says, we have to create an ES6 class that extends the provided React.component parent class.

13
00:01:15,140 --> 00:01:18,710
So just like we did in the previous two lectures.

14
00:01:19,230 --> 00:01:26,100
So when we're using class components, we're actually using object oriented programming principles like

15
00:01:26,100 --> 00:01:33,240
having to use the disk keyword to read incoming props and to define local component state, which can

16
00:01:33,240 --> 00:01:37,540
become a bit annoying over time with function components.

17
00:01:37,560 --> 00:01:41,610
On the other hand, these things are much easier.

18
00:01:41,730 --> 00:01:49,080
So to read props, all we have to do is to use the received props object and to define local state.

19
00:01:49,110 --> 00:01:51,360
We can use the use state hook.

20
00:01:51,720 --> 00:01:58,920
But probably the biggest difference between these two types of components is how they handle side effects

21
00:01:58,920 --> 00:02:01,230
and the component lifecycle.

22
00:02:01,320 --> 00:02:08,640
So in class components, we actually have special methods that were defined by React in order to run

23
00:02:08,640 --> 00:02:11,790
code at different points of the lifecycle.

24
00:02:11,790 --> 00:02:18,150
And so these are called lifecycle methods and we will look at the most important ones throughout this

25
00:02:18,150 --> 00:02:18,900
section.

26
00:02:19,490 --> 00:02:26,300
Now with function components, we now care a lot more about synchronization rather than the component

27
00:02:26,300 --> 00:02:27,410
lifecycle.

28
00:02:27,500 --> 00:02:31,370
And we do so by using the use effect hook.

29
00:02:31,550 --> 00:02:38,750
I mean, we know that this synchronization with use effect still kind of translates into the component

30
00:02:38,750 --> 00:02:44,990
lifecycle, but the focus is more on synchronizing the component with a side effect.

31
00:02:45,680 --> 00:02:53,870
And actually, I think it's safe to say that hooks in general are the big and the main difference between

32
00:02:53,870 --> 00:02:56,450
function and class components.

33
00:02:56,840 --> 00:03:04,430
Hooks just introduced a completely new way of thinking and of writing React applications.

34
00:03:04,580 --> 00:03:10,900
So the way that hooks were introduced, React development really changed forever.

35
00:03:10,910 --> 00:03:16,010
And if you ask me, it actually changed for a lot better.

36
00:03:16,770 --> 00:03:24,360
But anyway, some smaller differences are in event handlers and in the way in which we return the JSX

37
00:03:24,840 --> 00:03:26,730
from our components.

38
00:03:27,090 --> 00:03:34,350
So in function components, we simply handle events with functions that we define inside the component

39
00:03:34,350 --> 00:03:35,490
function body.

40
00:03:35,520 --> 00:03:42,270
While in class components, we have to create a new class method for every single event handler.

41
00:03:42,970 --> 00:03:51,640
Now, as for the JS in function components, we return our JS from the function while in class components.

42
00:03:51,640 --> 00:03:59,110
We need to return JS from a special render method, which is yet another React specific thing that you

43
00:03:59,110 --> 00:04:02,560
need to remember when you work with class components.

44
00:04:03,060 --> 00:04:10,500
So in general function components with hooks have a lot of advantages over class components.

45
00:04:10,530 --> 00:04:18,540
They are easier to build because they require a lot less react specific boilerplate code and they produce

46
00:04:18,540 --> 00:04:20,250
much cleaner code.

47
00:04:20,370 --> 00:04:29,040
And the main reason for this cleaner code is that the user hook combines all code related to the lifecycle

48
00:04:29,040 --> 00:04:32,580
in one single place, while in class components.

49
00:04:32,580 --> 00:04:39,810
That code is usually spread across multiple lifecycle methods, which can become quite confusing in

50
00:04:39,810 --> 00:04:41,040
large components.

51
00:04:41,760 --> 00:04:48,120
Now, one of the big reasons why Hooks were introduced in the first place is that they make it much

52
00:04:48,120 --> 00:04:53,280
easier to share stateful logic simply by creating custom hooks.

53
00:04:53,950 --> 00:05:01,450
And finally, in function components, we can get rid of the annoying and error prone dis keyword,

54
00:05:01,480 --> 00:05:05,620
which was especially hard to grasp for many beginners.

55
00:05:05,650 --> 00:05:12,910
The only advantage I would say that class components have is the fact that some people find it easier

56
00:05:12,910 --> 00:05:20,890
to understand the component lifecycle because of lifecycle methods with explicit names such as component

57
00:05:20,890 --> 00:05:24,310
did mount or component will unmount.

58
00:05:25,250 --> 00:05:25,880
Okay.

59
00:05:25,880 --> 00:05:32,960
And with this pretty detailed comparison, I think we're now ready to dive deep into how class components

60
00:05:32,960 --> 00:05:34,520
work in practice.
