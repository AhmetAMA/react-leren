1
00:00:00,910 --> 00:00:05,740
So let's now create our very first class component.

2
00:00:06,720 --> 00:00:11,430
And to do so, we are finally going to create a brand new app.

3
00:00:12,160 --> 00:00:15,340
So open up your terminal or command prompt.

4
00:00:16,980 --> 00:00:20,460
And then npx create.

5
00:00:21,600 --> 00:00:22,830
React app.

6
00:00:23,880 --> 00:00:24,930
Version five.

7
00:00:24,930 --> 00:00:28,530
And then the name of this app is going to be classy.

8
00:00:29,830 --> 00:00:32,740
Weather like this.

9
00:00:33,940 --> 00:00:37,870
So we are going to create a weather app basically.

10
00:00:37,870 --> 00:00:42,640
And since it's based on React classes, it is called class weather.

11
00:00:42,940 --> 00:00:49,030
And in the time while this is installing, let me just quickly show you the app.

12
00:00:50,550 --> 00:00:51,870
So here it is.

13
00:00:51,900 --> 00:00:55,800
And so we can very simply search for a location here.

14
00:00:56,440 --> 00:01:02,280
Let's say London, and it will then load the weather for today and for the next six days.

15
00:01:02,290 --> 00:01:06,160
So basically for the current week and that's it.

16
00:01:06,160 --> 00:01:13,120
So it's a very simple application, but it's fetching this weather data here from an API, of course.

17
00:01:13,120 --> 00:01:18,520
And here we can also, of course, search for any location that we want.

18
00:01:18,640 --> 00:01:25,900
So let's say I'm in Lisbon and so, well, it is going to rain tomorrow apparently, and therefore also

19
00:01:25,900 --> 00:01:27,610
where I live, I assume.

20
00:01:27,880 --> 00:01:33,820
But anyway, let's now wait for this to install our application and then once that's finished, let's

21
00:01:33,820 --> 00:01:35,200
meet back here.

22
00:01:36,340 --> 00:01:37,140
Okay.

23
00:01:37,150 --> 00:01:39,030
Looks like that finished.

24
00:01:39,040 --> 00:01:44,160
And so, as always, let's grab our starter files from the class.

25
00:01:44,200 --> 00:01:44,860
Whether.

26
00:01:46,500 --> 00:01:47,790
So these two.

27
00:01:47,790 --> 00:01:51,420
And then where is my folder?

28
00:01:51,810 --> 00:01:55,620
Oh, apparently I installed it in the wrong folder.

29
00:01:55,830 --> 00:01:58,230
So let's come here to the root folder.

30
00:01:59,920 --> 00:02:01,510
And there it is.

31
00:02:01,840 --> 00:02:04,720
So let's put that right here.

32
00:02:05,510 --> 00:02:06,560
And try again.

33
00:02:08,860 --> 00:02:10,840
So I'll just rename it again.

34
00:02:10,840 --> 00:02:15,340
And then inside our source, let's paste these two files.

35
00:02:17,450 --> 00:02:22,160
And also, as always, let's get rid of all the junk files here.

36
00:02:22,950 --> 00:02:26,640
So, yeah, I think those are the ones.

37
00:02:27,240 --> 00:02:35,970
So all we need are the Index.js, the app or new CSS and the starter dot JS, which is coming from our

38
00:02:35,970 --> 00:02:37,110
starter files.

39
00:02:38,080 --> 00:02:39,070
All right.

40
00:02:39,070 --> 00:02:44,710
And with this, we are ready to open up our project folder in vs code once again.

41
00:02:45,490 --> 00:02:46,390
Okay.

42
00:02:47,180 --> 00:02:54,530
And so let's just open up our app.js and index.js to clean up that file.

43
00:02:58,230 --> 00:02:59,670
And that should be it.

44
00:03:00,880 --> 00:03:03,340
And also clean up this file.

45
00:03:03,340 --> 00:03:09,490
So let's delete everything here and get started with our very first class component.

46
00:03:09,640 --> 00:03:18,400
So basically back in the day before 2019 in React, we would write components not using functions but

47
00:03:18,400 --> 00:03:20,770
using JavaScript classes.

48
00:03:21,360 --> 00:03:28,530
So the class keyword, then the name of the component, and then this class would actually be a child

49
00:03:28,530 --> 00:03:32,540
class of react.component.

50
00:03:32,580 --> 00:03:36,390
So extends and then react Dot.

51
00:03:38,210 --> 00:03:39,260
Component.

52
00:03:39,260 --> 00:03:45,370
And so therefore we would have to also import react in every component file.

53
00:03:45,410 --> 00:03:48,500
So import react from.

54
00:03:50,160 --> 00:03:51,060
React.

55
00:03:51,910 --> 00:03:52,690
No K.

56
00:03:52,870 --> 00:03:56,290
And then we should also export this component.

57
00:03:57,480 --> 00:03:58,890
Let's do that down here.

58
00:03:58,890 --> 00:04:01,860
Export default d counter.

59
00:04:03,740 --> 00:04:04,040
No.

60
00:04:04,040 --> 00:04:04,520
Okay.

61
00:04:04,520 --> 00:04:09,950
And so this is how we would set up a brand new component using classes.

62
00:04:09,950 --> 00:04:19,280
So again, using ES6 classes, so modern JavaScript classes which extend the parent class of React component.

63
00:04:19,280 --> 00:04:26,000
And so this parent class gives us a couple of methods and one of them is the render method.

64
00:04:27,480 --> 00:04:33,640
So every single react component that is written with classes needs to include the render method.

65
00:04:33,690 --> 00:04:40,860
So this render method is basically equivalent to the function body of a function component.

66
00:04:41,160 --> 00:04:47,690
So every single class component needs to have a render method which returns some JS.

67
00:04:50,020 --> 00:04:52,600
So let's just do that here.

68
00:04:53,720 --> 00:04:59,540
And of course works in the exact same way as in function components.

69
00:05:00,790 --> 00:05:04,150
Now what we're going to do here is a very simple date counter.

70
00:05:04,150 --> 00:05:10,060
Again, so similar to what we did, I think, in one of the challenges before.

71
00:05:10,900 --> 00:05:12,070
So let's just.

72
00:05:13,220 --> 00:05:15,500
Write a minus and a plus button.

73
00:05:15,500 --> 00:05:21,380
And in the middle, we just are going to have some span with the current number.

74
00:05:21,940 --> 00:05:23,470
So let's start at zero.

75
00:05:24,580 --> 00:05:25,480
All right.

76
00:05:25,480 --> 00:05:30,100
And so this is actually enough as a bare bones component.

77
00:05:30,100 --> 00:05:31,990
And so let's try it out now.

78
00:05:32,820 --> 00:05:34,590
By coming to our terminal.

79
00:05:34,860 --> 00:05:37,800
And then as always, npm start.

80
00:05:39,890 --> 00:05:41,420
So let's wait for it.

81
00:05:45,160 --> 00:05:46,420
And there it is.

82
00:05:46,600 --> 00:05:48,730
Well, that doesn't look really nice.

83
00:05:48,880 --> 00:05:53,560
Let's make this, like, really big so we can actually see something.

84
00:05:54,490 --> 00:05:58,570
Also, as always, let's bring up our developer tools.

85
00:05:59,510 --> 00:06:00,320
And.

86
00:06:00,650 --> 00:06:01,310
Okay.

87
00:06:02,340 --> 00:06:09,390
So next up, let's actually add some state to our component, which works in a very different way than

88
00:06:09,390 --> 00:06:14,030
in function components, because here we cannot use the use state took.

89
00:06:14,040 --> 00:06:20,300
So hooks are only for class components, but not of course, for class components.

90
00:06:20,310 --> 00:06:23,610
That's the huge difference between the two actually.

91
00:06:23,610 --> 00:06:31,350
And so in a class component, if we want to add state to a component, we first need to call the constructor

92
00:06:31,440 --> 00:06:32,430
method.

93
00:06:34,500 --> 00:06:39,090
So this one is part of all ES6 classes.

94
00:06:40,020 --> 00:06:48,750
And then this one receives props and it calls the parent constructor as well by using the super method

95
00:06:48,780 --> 00:06:50,280
or the super function.

96
00:06:51,090 --> 00:06:53,940
And it does so by passing in the props again.

97
00:06:54,360 --> 00:07:00,360
So this is a lot of boilerplate that we have to write when we want to use class components.

98
00:07:00,360 --> 00:07:03,300
And so this is why basically all react.

99
00:07:03,300 --> 00:07:06,720
Developers now prefer functional components.

100
00:07:06,720 --> 00:07:14,760
So again, this is a lot of work and super annoying to having to write all this boilerplate that really

101
00:07:14,760 --> 00:07:16,040
doesn't do anything.

102
00:07:16,050 --> 00:07:18,750
I mean, at least not anything super useful.

103
00:07:20,500 --> 00:07:21,070
Okay.

104
00:07:21,070 --> 00:07:26,470
And so now to initialize state, we do that also right here in the constructor method.

105
00:07:26,770 --> 00:07:33,910
So that's because this method here is called each time a new object is instantiated from this class.

106
00:07:35,760 --> 00:07:40,190
And so that's just how ES6 classes work, which I hope you're familiar with.

107
00:07:40,200 --> 00:07:43,500
But if not, that's also not a big deal at all.

108
00:07:44,710 --> 00:07:51,340
But anyway, here we are now defining basically a state property on the current object.

109
00:07:51,340 --> 00:07:55,750
So the current component will get the state that we define here.

110
00:07:55,990 --> 00:07:57,670
So that has to be an object.

111
00:07:57,670 --> 00:08:04,030
And then for each state variable that we want, we need to create one property in this object.

112
00:08:04,240 --> 00:08:07,600
So we want to count to start at one.

113
00:08:07,600 --> 00:08:13,650
And so this is yet another huge difference between functional and class components.

114
00:08:13,660 --> 00:08:21,310
So in class components, again, we only have one huge state object and not multiple state variables

115
00:08:21,310 --> 00:08:23,680
like we do with the use state hook.

116
00:08:23,950 --> 00:08:31,720
But anyway, let's use actually a different value here so that now we can access that here in our render

117
00:08:31,720 --> 00:08:32,470
method.

118
00:08:32,920 --> 00:08:40,000
So instead of the zero, let's actually access now this state and the way we have to do this is again

119
00:08:40,000 --> 00:08:41,140
a little bit annoying.

120
00:08:41,140 --> 00:08:44,620
So we have to write this dot state.

121
00:08:45,370 --> 00:08:46,630
Dot count.

122
00:08:47,720 --> 00:08:53,600
So the this keyword here will, in this case, simply point to the current component instance.

123
00:08:53,600 --> 00:08:57,740
And so then from there we read the state and from there the count.

124
00:08:57,770 --> 00:09:02,030
And so in class components, you will see this kind of thing all the time.

125
00:09:02,030 --> 00:09:07,940
It's always going to be this dot state dot something or this dot props dot something.

126
00:09:08,520 --> 00:09:10,850
But anyway, let's now save this.

127
00:09:10,860 --> 00:09:15,220
And we see that indeed our value here got updated to five.

128
00:09:15,240 --> 00:09:18,180
So it's reading our value from the state now.

129
00:09:18,180 --> 00:09:24,030
And so next, what we need to do is to then of course, attach some event handlers to these buttons

130
00:09:24,030 --> 00:09:26,820
here to then actually update the state.

131
00:09:26,970 --> 00:09:30,000
So let's do that in the next lecture.
