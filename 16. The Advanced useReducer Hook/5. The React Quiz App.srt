1
00:00:00,930 --> 00:00:08,190
Let's start building a brand new app that will hopefully show you how extremely helpful the use reducer

2
00:00:08,190 --> 00:00:09,480
hook can be.

3
00:00:10,820 --> 00:00:16,850
And so this is the application that we are going to build and it's called the React Quiz.

4
00:00:17,000 --> 00:00:23,150
So as the name says, this is basically a very simple quiz about some react concepts.

5
00:00:23,710 --> 00:00:28,570
So this starts by actually loading the questions from a fake API.

6
00:00:28,750 --> 00:00:32,950
And so at this point, we have received those 50 questions.

7
00:00:32,950 --> 00:00:36,070
And so then we can start the quiz right here.

8
00:00:36,680 --> 00:00:40,640
So here then we have the question with the four different options.

9
00:00:40,640 --> 00:00:46,490
And up here we can see our progress and the number of points that we have won so far.

10
00:00:46,850 --> 00:00:51,530
So here then we can of course, click on the correct option.

11
00:00:51,530 --> 00:00:55,160
In this case, react is the most popular framework.

12
00:00:55,160 --> 00:00:59,090
And so then immediately it is marked as correct.

13
00:00:59,090 --> 00:01:04,820
And also the next button here appears so that we can move to the next one.

14
00:01:04,820 --> 00:01:08,240
And now this time let's choose a wrong option.

15
00:01:08,360 --> 00:01:13,160
And so, of course, the correct one is still marked here as correct.

16
00:01:13,930 --> 00:01:20,310
Now, of course, I will not go through the entire quiz here, but we will see what the end result.

17
00:01:20,320 --> 00:01:23,620
So when we reach the end of the quiz looks like.

18
00:01:24,350 --> 00:01:27,740
Now just notice that here we also have a timer running.

19
00:01:27,740 --> 00:01:35,840
And so when this timer finishes, then we automatically lose or we actually finish the quiz by then

20
00:01:35,840 --> 00:01:36,800
automatically.

21
00:01:36,800 --> 00:01:40,850
And we only get the points that we have gathered up until that point.

22
00:01:41,920 --> 00:01:45,140
So all the state that we see here on the screen.

23
00:01:45,160 --> 00:01:48,100
So which question was selected?

24
00:01:48,130 --> 00:01:49,540
The number of points.

25
00:01:49,540 --> 00:01:52,000
Which question we are right now.

26
00:01:52,030 --> 00:01:53,320
The timer.

27
00:01:53,320 --> 00:02:01,240
And really all the state is just managed by one big reducer because that's what this section is all

28
00:02:01,240 --> 00:02:01,930
about.

29
00:02:01,930 --> 00:02:02,770
Right?

30
00:02:03,610 --> 00:02:09,460
Now, in this lecture, all I want to do is to just set up here the app skeleton.

31
00:02:09,460 --> 00:02:14,950
So basically just setting up the structure with the header and the app itself.

32
00:02:14,950 --> 00:02:21,280
And so then in the next lecture we can start fetching the questions and start building the application.

33
00:02:22,480 --> 00:02:25,870
So we no longer need this component here.

34
00:02:25,990 --> 00:02:32,950
And instead, let's come back to App and here we then remove that date counter.

35
00:02:34,600 --> 00:02:35,380
Okay.

36
00:02:36,670 --> 00:02:42,430
So our parent div here will have the class name of app.

37
00:02:43,400 --> 00:02:47,120
And then inside that app we will have a header.

38
00:02:47,480 --> 00:02:53,210
So basically this part here with the logo and the name of the application.

39
00:02:53,950 --> 00:03:00,880
Now, as I said in one of the previous sections, we will now start to actually create one file per

40
00:03:00,880 --> 00:03:01,710
component.

41
00:03:01,720 --> 00:03:05,800
So making this project development a bit more real world.

42
00:03:07,070 --> 00:03:12,280
Now, in case of the header, I actually already created that component for us.

43
00:03:12,290 --> 00:03:20,690
So it's just this very simple component that doesn't even have any logic or any state and it doesn't

44
00:03:20,690 --> 00:03:21,860
even accept props.

45
00:03:21,860 --> 00:03:26,740
So it's just a very simple presentational component that has the image.

46
00:03:26,750 --> 00:03:29,690
So the logo and the title.

47
00:03:29,960 --> 00:03:32,720
And so let's include that here.

48
00:03:35,020 --> 00:03:36,220
Just like this.

49
00:03:37,080 --> 00:03:41,010
And of course we then need to import that component.

50
00:03:42,570 --> 00:03:44,130
From that file.

51
00:03:45,940 --> 00:03:48,940
So in the current folder and then header.

52
00:03:49,680 --> 00:03:50,850
And there we go.

53
00:03:51,850 --> 00:03:57,640
So there we have our header and then here below that we will have basically the main content.

54
00:03:57,640 --> 00:04:02,500
And so for that main content, let's create a main component.

55
00:04:03,930 --> 00:04:06,930
And before we do that, I will just write the markup here.

56
00:04:07,350 --> 00:04:14,430
So let's say that we want a main element with the class actually of Main as well.

57
00:04:16,020 --> 00:04:23,760
And then, for example, let's say we want a paragraph with the progress, let's say one of 15.

58
00:04:24,690 --> 00:04:26,700
So this is just some dummy content here.

59
00:04:26,700 --> 00:04:29,580
And then the question itself.

60
00:04:30,630 --> 00:04:31,260
Right.

61
00:04:31,260 --> 00:04:33,630
So let's say that we just have this.

62
00:04:34,130 --> 00:04:42,590
But we want it to be not inside the main element here, but instead we want it to be inside its own

63
00:04:42,590 --> 00:04:47,570
component so that then here our up component stays nice and clean.

64
00:04:47,570 --> 00:04:53,630
So just having like different components, but not these elements with their class names.

65
00:04:54,370 --> 00:04:59,530
So let's then create a new file with a new component.

66
00:04:59,560 --> 00:05:07,060
So this one will be called Main.js because Main will be the name of the component.

67
00:05:07,270 --> 00:05:13,930
And now let's actually, for the first time, use that snippet that I gave you at the very beginning

68
00:05:13,930 --> 00:05:15,130
of the course.

69
00:05:15,520 --> 00:05:17,110
So remember that.

70
00:05:17,440 --> 00:05:22,900
Let's come here to the user snippets and then it should be one of these.

71
00:05:23,740 --> 00:05:24,160
Yeah.

72
00:05:24,160 --> 00:05:27,550
So the snippet that I mean is the RFC snippet.

73
00:05:27,550 --> 00:05:33,400
And if for some reason you didn't add this to your own snippets at the beginning of the course, then

74
00:05:33,400 --> 00:05:36,010
you can just maybe copy the code from here.

75
00:05:36,010 --> 00:05:43,150
Or you can go back to that setup lecture at the beginning of the course, because again, we will now

76
00:05:43,180 --> 00:05:46,990
use that snippet and it will be extremely handy.

77
00:05:47,000 --> 00:05:52,900
So all we have to write is our fork hit enter and bam!

78
00:05:52,900 --> 00:05:58,870
It creates a brand new component for us even with the name of the file.

79
00:05:58,870 --> 00:06:04,570
So it got the name here from the file and then it accordingly named the component.

80
00:06:04,570 --> 00:06:10,150
And so now all we have to do is to change right here or markup.

81
00:06:10,180 --> 00:06:13,810
Now here we want to change from a div to a main element.

82
00:06:13,810 --> 00:06:20,950
And so remember how many times it was quite annoying that we had to change this opening tag and the

83
00:06:20,950 --> 00:06:21,940
closing tag.

84
00:06:21,940 --> 00:06:26,990
And so to fix that, let's install this extension right here.

85
00:06:26,990 --> 00:06:28,940
So auto rename tag.

86
00:06:29,240 --> 00:06:33,140
So I already have it installed, but just go ahead and do that.

87
00:06:33,140 --> 00:06:41,120
And so then when I change this div to main, then you see that both of them change at the same time.

88
00:06:42,400 --> 00:06:45,670
So here the class name again of Main.

89
00:06:45,940 --> 00:06:47,110
And now here.

90
00:06:47,110 --> 00:06:49,870
What will we place as the content?

91
00:06:50,140 --> 00:06:57,640
Well, basically here we want this content to stay in this component, so we want to just pass it in

92
00:06:57,670 --> 00:06:58,620
to the main.

93
00:06:58,630 --> 00:07:01,600
And so for that we use the children prop.

94
00:07:03,140 --> 00:07:03,890
Remember.

95
00:07:03,890 --> 00:07:07,190
So basically doing component composition here.

96
00:07:08,130 --> 00:07:11,620
And we have done this multiple times already at this point.

97
00:07:11,640 --> 00:07:13,440
So this should be nothing new.

98
00:07:14,250 --> 00:07:20,940
And so with this, all we have to do is to replace this right here with Main.

99
00:07:21,950 --> 00:07:25,070
And again, it then automatically replaced the tier.

100
00:07:25,070 --> 00:07:28,790
And then all we have to do is import main.

101
00:07:29,650 --> 00:07:30,730
From.

102
00:07:32,070 --> 00:07:32,520
Main.

103
00:07:34,070 --> 00:07:36,080
No, right now it looks the same here.

104
00:07:36,080 --> 00:07:38,600
But now we have a bit of a better structure.

105
00:07:38,600 --> 00:07:44,240
And also I think the component tree is a lot more complete like this.

106
00:07:45,570 --> 00:07:47,670
Well, actually, this hasn't updated yet.

107
00:07:48,300 --> 00:07:48,750
Yeah.

108
00:07:48,750 --> 00:07:54,330
So then also in the tree, we can see that we have the app, a header and a main part.
