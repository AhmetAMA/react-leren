1
00:00:00,850 --> 00:00:08,080
So as always, let's start by setting up a new project and by taking a look at the final version of

2
00:00:08,080 --> 00:00:09,850
the app that we're going to build.

3
00:00:11,160 --> 00:00:16,350
So let's fire up our terminal or the command prompt in Windows.

4
00:00:16,350 --> 00:00:21,780
And then as always, we navigate to the folder where we want the project to live.

5
00:00:22,660 --> 00:00:24,160
So for me, that's the desktop.

6
00:00:24,160 --> 00:00:27,400
For you, it can be any other folder on your system.

7
00:00:27,410 --> 00:00:31,750
And so now as always, let's type npx create.

8
00:00:32,440 --> 00:00:35,860
React app version five.

9
00:00:36,010 --> 00:00:40,960
And then here the name of the project is Eat and Split.

10
00:00:41,080 --> 00:00:44,770
So basically eat and split but for short.

11
00:00:45,070 --> 00:00:52,330
And the name of the app is eaten split because this is the application that we are going to build.

12
00:00:52,330 --> 00:00:58,690
So it's an application where you can basically go out with a friend to have dinner or lunch and then

13
00:00:58,690 --> 00:01:01,390
you can split the bill using this application.

14
00:01:01,600 --> 00:01:07,690
So here we have our list of friends and we can also add some other friends down here.

15
00:01:08,290 --> 00:01:14,520
Let's say Jane, and then the friend will get a random image exactly like this.

16
00:01:14,530 --> 00:01:21,700
But as I said, the main functionality of this app is that you can share a meal with a friend and then

17
00:01:21,700 --> 00:01:25,890
you can select that friend and share the bill with that friend.

18
00:01:25,900 --> 00:01:29,650
So for example, let's split a bill with Anthony.

19
00:01:30,040 --> 00:01:40,120
So let's say in total we spend €100 or $100 and let's say my part of the bill was 40, so I consumed

20
00:01:40,120 --> 00:01:42,310
food worth €40.

21
00:01:42,310 --> 00:01:46,660
And so then that means that Anthony spent the other €60.

22
00:01:47,020 --> 00:01:50,290
Then down here we can select who is paying the bill.

23
00:01:50,290 --> 00:01:52,750
So let's say that I am spending the bill.

24
00:01:52,750 --> 00:01:54,370
So that's you.

25
00:01:54,370 --> 00:01:56,320
But it could also be Anthony.

26
00:01:56,980 --> 00:02:03,140
So if I pay the bill, then after splitting the bill, Anthony should owe me €60.

27
00:02:03,160 --> 00:02:03,960
Right.

28
00:02:03,970 --> 00:02:06,340
So right now it says here that we are even.

29
00:02:06,340 --> 00:02:11,320
But now, as I split the bill, Anthony owes me €60.

30
00:02:11,800 --> 00:02:12,550
Right.

31
00:02:12,550 --> 00:02:14,980
And it could also be the other way around.

32
00:02:15,070 --> 00:02:17,740
So let's just reload here to reset.

33
00:02:18,010 --> 00:02:22,780
So again, let's say the bill was €100, of which I spent 40.

34
00:02:22,840 --> 00:02:30,100
And so now if Anthony pays the entire bill, I will owe him €40, just as it says here.

35
00:02:30,460 --> 00:02:36,400
And of course, this logic will become more clear as we start building this functionality.

36
00:02:36,400 --> 00:02:44,080
But before we go do that, let's again split this UI into components, which is the first step of the

37
00:02:44,080 --> 00:02:46,240
thinking in React process.

38
00:02:47,020 --> 00:02:54,130
So here is the entire UI at once, which makes it a bit easier to split the UI into the components that

39
00:02:54,130 --> 00:02:55,360
we need to implement.

40
00:02:55,600 --> 00:03:02,770
Now, splitting a UI into different components can be a pretty subjective process, but we will learn

41
00:03:02,770 --> 00:03:06,480
some techniques about how to do this in the next section.

42
00:03:06,490 --> 00:03:10,780
But for now, in this case I think that it's actually pretty obvious.

43
00:03:10,780 --> 00:03:18,280
So we have our list of friends here at the left side, and then in there we have a few friends themselves.

44
00:03:18,610 --> 00:03:25,330
So just like we did many times before, we have basically one component for the list of friends, and

45
00:03:25,330 --> 00:03:28,720
then we have one component for each friend itself.

46
00:03:29,250 --> 00:03:33,370
Then down here we have this form where we add new friends.

47
00:03:33,390 --> 00:03:39,330
And then here on the right side, we have the form where we input the build data and how it should be

48
00:03:39,330 --> 00:03:40,020
split.

49
00:03:40,170 --> 00:03:42,180
So pretty straightforward.

50
00:03:42,180 --> 00:03:48,570
And so let's now move on and start implementing some of these components statically so without any state

51
00:03:48,570 --> 00:03:49,170
yet.
