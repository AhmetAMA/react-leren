1
00:00:00,900 --> 00:00:05,880
So the third part of an effect is the cleanup function.

2
00:00:05,880 --> 00:00:12,960
And so let's now come back to the timeline that we have looked at before and the holds that we have

3
00:00:12,960 --> 00:00:14,040
left in it.

4
00:00:14,370 --> 00:00:22,440
So remember that after the last effect, run the title of the page in the browser tab was set to interstellar

5
00:00:22,440 --> 00:00:23,240
wars.

6
00:00:23,250 --> 00:00:24,150
Right?

7
00:00:24,300 --> 00:00:31,800
However, once we unmounted the movie details component, we would probably like the title to return

8
00:00:31,800 --> 00:00:36,230
to the original text, which was simply use popcorn.

9
00:00:36,240 --> 00:00:39,180
So just the name of the application.

10
00:00:39,330 --> 00:00:41,340
But how could we do that?

11
00:00:41,370 --> 00:00:48,660
How can we ensure that the page title stays synchronized with the application even after the component

12
00:00:48,660 --> 00:00:50,010
has disappeared?

13
00:00:50,160 --> 00:00:58,740
Well, basically what we need is a way to execute some code as the component unmounts and we can do

14
00:00:58,740 --> 00:01:04,920
exactly that by returning a so-called cleanup function from the effect.

15
00:01:04,930 --> 00:01:11,140
And in this case, that's simply a function that sets the title back to use popcorn.

16
00:01:11,820 --> 00:01:12,540
All right.

17
00:01:12,540 --> 00:01:17,040
But you see that we still have another hole here in the timeline.

18
00:01:17,040 --> 00:01:24,360
And that's because the cleanup function that we return from the effect is actually also executed on

19
00:01:24,360 --> 00:01:25,410
rerenders.

20
00:01:25,410 --> 00:01:30,150
So right before the next effect is executed again.

21
00:01:31,150 --> 00:01:36,520
So let's recap this important new information that we just learned.

22
00:01:37,480 --> 00:01:43,150
So the clean up function is a function that we can return from an effect.

23
00:01:43,150 --> 00:01:51,100
And I say can because the cleanup function is optional so we don't have to return one from the effect.

24
00:01:51,460 --> 00:01:55,820
Now the cleanup function will run on two occasions.

25
00:01:55,840 --> 00:02:03,700
First, it runs before the effect is executed again in order to clean up the results of the previous

26
00:02:03,700 --> 00:02:04,840
side effect.

27
00:02:04,870 --> 00:02:12,700
It also runs right after the component instance has unmounted in order to give us the opportunity to

28
00:02:12,700 --> 00:02:17,530
reset the side effect that we created if that's necessary.

29
00:02:17,860 --> 00:02:25,300
So remember that we have the dependency array in order to run code whenever the component mounts or

30
00:02:25,300 --> 00:02:26,400
rerenders.

31
00:02:26,410 --> 00:02:34,230
And now with the cleanup function, we also have a way to run some code whenever the component unmounts.

32
00:02:34,240 --> 00:02:39,380
And so with this, we have the entire component lifecycle covered.

33
00:02:39,970 --> 00:02:44,980
Now, you might be wondering, when do we actually need a clean up function?

34
00:02:45,250 --> 00:02:52,570
Well, basically, we need a cleanup function whenever the side effect keeps happening after the component

35
00:02:52,570 --> 00:02:55,570
has been re rendered or unmounted.

36
00:02:55,810 --> 00:03:01,090
For example, you might be doing an Http request in your effect.

37
00:03:01,360 --> 00:03:09,220
Now, if the component is re rendered while the first request is still running, a new second request

38
00:03:09,220 --> 00:03:10,690
would be fired off.

39
00:03:10,720 --> 00:03:11,650
Right.

40
00:03:11,650 --> 00:03:19,240
And so this might then create a bug called a race condition and therefore it's a good idea to cancel

41
00:03:19,240 --> 00:03:25,290
the request in a cleanup function whenever the component re renders or unmounts.

42
00:03:25,300 --> 00:03:28,390
And of course there are many other examples.

43
00:03:28,390 --> 00:03:33,970
So when you subscribe to some API service, you should cancel the subscription.

44
00:03:33,970 --> 00:03:41,450
When you start a timer, you should stop the timer in the cleanup function or if you add an event listener,

45
00:03:41,450 --> 00:03:44,090
you should clean up by removing it.

46
00:03:44,660 --> 00:03:45,200
Okay.

47
00:03:45,200 --> 00:03:52,580
And now to finish, let me give you one more important rule about effects, which is that each effect

48
00:03:52,580 --> 00:03:55,100
should only do one thing.

49
00:03:55,160 --> 00:04:01,970
So if you need to create multiple effects in your components, which is completely normal, just use

50
00:04:01,970 --> 00:04:03,970
multiple use effect hooks.

51
00:04:03,980 --> 00:04:10,460
This not only makes each effect much easier to understand, but it also makes effects easier to clean

52
00:04:10,460 --> 00:04:12,920
up using a cleanup function.

53
00:04:13,010 --> 00:04:17,780
And with that being said, let's return to our application.
